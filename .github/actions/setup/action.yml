name: setup
description: Setup toolchains and tools

inputs:
  rust-toolchain:
    description: "The default Rust toolchain to setup"
    required: false
  rust-cachekey:
    description: "A cache key for Rust dependencies"
    required: false

outputs:
  nightly_toolchain:
    description: "The Rust nightly toolchain identifier (e.g. nightly-2018-11-23)"
    value: ${{ steps.toolchains-config.outputs.nightly }}

  minrust_toolchain:
    description: "The Rust MSRV toolchain identifier (e.g. 1.70)"
    value: ${{ steps.toolchains-config.outputs.minrust }}

runs:
  using: "composite"
  steps:
    - name: remove dotnet to have more disk space available
      shell: bash
      run: sudo rm -rf /usr/share/dotnet

    - name: install Just
      uses: extractions/setup-just@v2

    - name: setup Git
      shell: bash
      run: |
        git config --global user.email "tlspuffin@tlspuffin"
        git config --global user.name "tlspuffin"
        git config --global advice.detachedHead false

    - name: setup CI env
      shell: bash
      run: |
        #!/usr/bin/env bash
        export_env() {
          local var=${1}
          local val=${2:-${!1}}

          printf '%s=%s\n' "${var}" "${val}" >> "${GITHUB_ENV}"
        }

        export_env RUST_LOG "info"
        export_env CLANG_PATH "$(clang -print-prog-name=clang)"
        export_env LIBCLANG_PATH "$(llvm-config-"$(clang -dumpversion | cut -d '.' -f1)" --libdir)"
        export_env BINDGEN_EXTRA_CLANG_ARGS "-v"

    - name: toolchains configuration
      id: toolchains-config
      shell: bash
      run: |
        #!/usr/bin/env bash
        if [[ -n '${{ inputs.rust-toolchain }}' ]]; then
          export RUSTUP_TOOLCHAIN=${{ inputs.rust-toolchain }}
        fi

        DEFAULT_TOOLCHAIN=$(just run printf '%s\\n' "\${DEFAULT_TOOLCHAIN}")
        NIGHTLY_TOOLCHAIN=$(just run printf '%s\\n' "\${NIGHTLY_TOOLCHAIN}")
        MINRUST_TOOLCHAIN=$(just run printf '%s\\n' "\${MINRUST_TOOLCHAIN}")
        printf 'RUSTUP_TOOLCHAIN=%s\n' "${DEFAULT_TOOLCHAIN}" >> "${GITHUB_ENV}"

        printf 'default=%s\n' "${DEFAULT_TOOLCHAIN}" >> "${GITHUB_OUTPUT}"
        printf 'nightly=%s\n' "${NIGHTLY_TOOLCHAIN}" >> "${GITHUB_OUTPUT}"
        printf 'minrust=%s\n' "${MINRUST_TOOLCHAIN}" >> "${GITHUB_OUTPUT}"
        printf 'rustup-home=%s\n' "$(just run rustup show home)" >> "${GITHUB_OUTPUT}"

    - uses: actions/cache@v4
      id: rustup-cache
      with:
        key: rustup_cache-${{ runner.os }}-${{ steps.toolchains-config.outputs.default }}-${{ steps.toolchains-config.outputs.nightly }}
        restore-keys: |
          rustup_cache-${{ runner.os }}-${{ steps.toolchains-config.outputs.default }}
          rustup_cache-${{ runner.os }}
        path: |
          ${{ steps.toolchains-config.outputs.rustup-home }}

    - name: install Rust toolchains
      shell: bash
      run: |
        #!/usr/bin/env bash
        just install-rust-toolchain ${{ steps.toolchains-config.outputs.default }}
        just install-rust-toolchain ${{ steps.toolchains-config.outputs.nightly }}
        just install-rust-toolchain ${{ steps.toolchains-config.outputs.minrust }}

    - uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ inputs.rust-cachekey }}
        cache-all-crates: "true" # include tooling dependencies

    - name: install Rust tooling dependencies
      shell: bash
      run: just install-rust-tooling ${{ steps.toolchains-config.outputs.default }}
