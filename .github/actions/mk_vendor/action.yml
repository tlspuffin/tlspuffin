name: mk_vendor
description: build a PUT vendor library

inputs:
  vendor:
    description: 'The vendor library name (e.g. "openssl" or "wolfssl")'
    required: true
  preset:
    description: 'The name of the configuration preset (e.g. "openssl111j")'
    required: true
  name:
    description: 'The output directory name of the configuration preset (e.g. "myopenssl")'
    required: false

runs:
  using: "composite"
  steps:
    - name: compute configuration hash
      id: compute-hash
      shell: bash
      run: |
        #!/usr/bin/env bash
        SCRIPTS=${{ hashFiles(format('puffin-build/vendors/{0}/**',inputs.vendor), 'puffin-build/builder/**') }}

        printf 'scripts=%s\n' "${SCRIPTS}" >> "${GITHUB_OUTPUT}"
        printf 'confuid=%s\n' "${CONFUID}" >> "${GITHUB_OUTPUT}"

    - uses: actions/cache@v4
      id: library-cache
      with:
        key: mk_vendor_cache-${{ runner.os }}-${{ steps.compute-hash.outputs.scripts }}-${{ inputs.vendor }}-${{ inputs.preset }}
        path: |
          vendor/${{ inputs.name || inputs.preset }}

    - name: run mk_vendor
      id: library-build
      shell: bash
      run: just mk_vendor "${{ inputs.vendor }}" "${{ inputs.preset }}" "--name=${{ inputs.name || inputs.preset }}"
      if: steps.library-cache.outputs.cache-hit != 'true'
