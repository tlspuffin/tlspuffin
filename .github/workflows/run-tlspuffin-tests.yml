name: run-tlspuffin-tests

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      vendor:
        required: true
        type: string
      preset:
        required: true
        type: string
      patches:
        required: false
        type: string
        default: '[]'
      options:
        required: false
        type: string
        default: '[]'
      features:
        required: false
        type: string
        default: '[]'

permissions:
  contents: read

jobs:
  tlspuffin-tests:
    name: ${{ inputs.name }}
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: setup
        uses: ./.github/actions/setup

      - name: compute vendor library shortname
        id: compute-lib-shortname
        run: |
          #!/usr/bin/env bash
          if [[ -z '${{ join(fromJson(inputs.options), '-') }}' ]]; then
            OPTIONS=""
          else
            OPTIONS="-$(printf '%s\n' '${{ join(fromJson(inputs.options), '-') }}')"
          fi

          printf 'shortname=%s%s\n' "${{ inputs.preset }}" "${OPTIONS}" >> "${GITHUB_OUTPUT}"

      - name: build vendor library
        if: ${{ contains(fromJson('["openssl"]'), inputs.vendor) }}
        uses: ./.github/actions/mk_vendor
        with:
          vendor: "${{ inputs.vendor }}"
          preset: "${{ inputs.preset }}"
          name: "${{ steps.compute-lib-shortname.outputs.shortname }}"
          patches: "${{ join(fromJson(inputs.patches), ',') }}"
          options: "${{ join(fromJson(inputs.options), ',') }}"

      - name: test
        run: just test tlspuffin x86_64-unknown-linux-gnu "${{ inputs.preset }},${{ join(fromJson(inputs.features), ',') }}" ""
