name: Build & Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - trailofbits
  pull_request:

permissions:
  pull-requests: read # needed for label-based CI/CD configuration
  contents: write     # needed for deployment jobs

jobs:
  configure:
    runs-on: ubuntu-22.04
    outputs:
      checks: ${{ steps.set-checks-profiles.outputs.checks }}
      deploy: ${{ steps.set-deploy-profiles.outputs.deploy }}
    defaults:
      run:
        shell: bash
    steps:
      - id: set-checks-profiles
        name: Set CI profiles
        run: |
          #!/usr/bin/env bash
          CI_CHECKS=()
          HAS_LABEL_CI_NONE=${{ contains(github.event.pull_request.labels.*.name, 'ci:none') }}
          HAS_LABEL_CI_FAST=${{ contains(github.event.pull_request.labels.*.name, 'ci:fast') }}
          HAS_LABEL_CI_FULL=${{ contains(github.event.pull_request.labels.*.name, 'ci:full') }}

          # set defaults
          case "${{ github.event_name == 'pull_request' }}" in
            true)  CI_CHECKS=( check smoke docs );;
            false) CI_CHECKS=( check smoke docs base extra );;
          esac

          [[ ${HAS_LABEL_CI_NONE} == true ]] && CI_CHECKS=()
          [[ ${HAS_LABEL_CI_FAST} == true ]] && CI_CHECKS=( check smoke docs )
          [[ ${HAS_LABEL_CI_FULL} == true ]] && CI_CHECKS=( check smoke docs base extra )

          json_result=$(printf ', "%s"' "x" "${CI_CHECKS[@]}")
          json_result="[${json_result:6}]"

          printf 'checks=%s\n' "${json_result}" >> "${GITHUB_OUTPUT}"

      - id: set-deploy-profiles
        name: Set CD profiles
        run: |
          #!/usr/bin/env bash
          CD_DEPLOYEMENTS=()

          if [[ ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main') }} == true ]]; then
            CD_DEPLOYEMENTS+=( docs )
          fi

          json_result=$(printf ', "%s"' "x" "${CD_DEPLOYEMENTS[@]}")
          json_result="[${json_result:6}]"

          printf 'deploy=%s\n' "${json_result}" >> "${GITHUB_OUTPUT}"

      - id: print-configuration
        name: print CI/CD profiles
        run: |
          #!/usr/bin/env bash
          printf 'selected CI profiles: %s\n' '${{ steps.set-checks-profiles.outputs.checks }}'
          printf 'selected CD profiles: %s\n' '${{ steps.set-deploy-profiles.outputs.deploy }}'
          printf 'triggering event:\n'
          cat "${GITHUB_EVENT_PATH}"

  check:
    needs: [configure]
    if: ${{ contains(fromJson(needs.configure.outputs.checks), 'check') }}
    uses: ./.github/workflows/run-checks.yml

  smoke-test:
    needs: [configure]
    if: ${{ contains(fromJson(needs.configure.outputs.checks), 'smoke') }}
    uses: ./.github/workflows/run-smoke-test.yml

  docs:
    needs: [configure]
    if: ${{ contains(fromJson(needs.configure.outputs.checks), 'docs') }}
    uses: ./.github/workflows/build-docs.yml

  run-benchmarks:
    needs: [configure, smoke-test]
    if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
    uses: ./.github/workflows/run-benchmarks.yml

  test-tlspuffin:
    needs: [configure, smoke-test]
    strategy:
      fail-fast: false
      matrix:
        include:
          - vendor: openssl
            preset: openssl111k
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}
          - vendor: openssl
            preset: openssl111j
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - vendor: openssl
            preset: openssl101f
            options: sancov,asan
            features: asan
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}
          - vendor: openssl
            preset: openssl102u
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}
          - vendor: libressl
            preset: libressl
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}
          - vendor: wolfssl
            preset: wolfssl430
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}
          - vendor: wolfssl
            preset: wolfssl510
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}
          - name: wolfssl510
            vendor: wolfssl
            preset: wolfssl510
            options: sancov
            features: fix-CVE-2022-25640,fix-CVE-2022-39173
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - name: wolfssl510-skip
            vendor: wolfssl
            preset: wolfssl510
            options: sancov
            features: fix-CVE-2022-25638,fix-CVE-2022-39173
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - vendor: wolfssl
            preset: wolfssl520
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - vendor: wolfssl
            preset: wolfssl520
            options: sancov,asan
            features: asan
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - vendor: wolfssl
            preset: wolfssl530
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}
          - vendor: wolfssl
            preset: wolfssl530
            options: sancov,asan
            features: asan
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}
          - vendor: wolfssl
            preset: wolfssl540
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}
          - name: wolfssl540-sdos2
            vendor: wolfssl
            preset: wolfssl540
            options: sancov
            features: wolfssl-disable-postauth,fix-CVE-2022-39173
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - name: wolfssl530-cdos
            vendor: wolfssl
            preset: wolfssl530,
            options: sancov
            features: fix-CVE-2022-39173
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - vendor: wolfssl
            preset: wolfssl540
            options: sancov,asan
            features: asan
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - name: wolfssl540-buf
            vendor: wolfssl
            preset: wolfssl540
            options: sancov
            features: fix-CVE-2022-42905
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - name: wolfssl540-heap
            vendor: wolfssl
            preset: wolfssl540
            options: sancov,asan
            features: asan,fix-CVE-2022-39173
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - name: wolfssl540_asan-perf
            vendor: wolfssl
            preset: wolfssl540
            options: sancov,asan
            features: asan,fix-CVE-2022-39173,fix-CVE-2022-42905
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - name: wolfssl540-perf
            vendor: wolfssl
            preset: wolfssl540
            options: sancov
            features: fix-CVE-2022-39173,fix-CVE-2022-42905
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - vendor: boringssl
            preset: boringssl202403
            options: sancov
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'extra') }}
          - vendor: boringssl
            preset: boringssl202403
            options: sancov,asan
            features: asan
            if: ${{ contains(fromJson(needs.configure.outputs.checks), 'base') }}

    uses: ./.github/workflows/run-tlspuffin-tests.yml
    name: tlspuffin ${{ matrix.name || format('{0}:{1}-{2}-{3}', matrix.vendor, matrix.preset, matrix.options, matrix.features) }}
    with:
      name: ${{ matrix.name || format('{0}:{1}-{2}-{3}', matrix.vendor, matrix.preset, matrix.options, matrix.features) }}
      vendor: ${{ matrix.vendor }}
      preset: ${{ matrix.preset }}
      options: ${{ matrix.options }}
      features: ${{ matrix.features }}
      if: ${{ matrix.if }}

  deploy-docs:
    needs: [configure, docs]
    if: ${{ contains(fromJson(needs.configure.outputs.deploy), 'docs') }}
    uses: ./.github/workflows/deploy-docs.yml
