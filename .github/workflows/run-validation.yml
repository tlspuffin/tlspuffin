name: run-validation

on:
  workflow_call:
    inputs:
      profile: # one of ['none', 'fast', 'full']
        type: string
        required: true

permissions:
    contents: read

jobs:
  configure:
    runs-on: ubuntu-22.04
    outputs:
      checks: ${{ steps.configure-checks.outputs.checks }}
      matrix: ${{ steps.configure-checks.outputs.matrix }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - id: configure-checks
        name: Configure Validation
        run: |
          #!/usr/bin/env bash
          case "${{ inputs.profile }}" in
            none)
              CI_CHECKS=()
              CI_MATRIX="[]"
              ;;
            fast)
              CI_CHECKS=$(jq -c -n '[ "check", "smoke", "docs", "test" ]')
              CI_MATRIX=$(jq -c 'map(select( .labels[] | contains("fast") ))' .github/tlspuffin.matrix.json)
              ;;
            full)
              CI_CHECKS=$(jq -c -n '[ "check", "smoke", "docs", "test", "benchmark" ]')
              CI_MATRIX=$(jq -c '.' .github/tlspuffin.matrix.json)
              ;;
            *)
              printf "error: unknown validation profile '%s'\n" "${{ inputs.profile }}"
              exit 1
              ;;
          esac

          printf 'checks=%s\n' "${CI_CHECKS}" >> "${GITHUB_OUTPUT}"
          printf 'matrix=%s\n' "${CI_MATRIX}" >> "${GITHUB_OUTPUT}"

      - id: print-configuration
        name: Display Configuration
        run: |
          #!/usr/bin/env bash
          printf 'Finished configuration job:\n'
          printf '  - received validation profile: %s\n' '${{ inputs.profile }}'
          printf '  - selected validation checks:\n'
          for check in $(jq -r '.[] | @sh' <(printf "%s" '${{ steps.configure-checks.outputs.checks }}') | tr -d \'\"); do
            printf '    - %s\n' "${check}"
          done
          printf '  - selected test configurations:\n'
          for conf in $(jq -r '.[].name | @sh' <(printf "%s" '${{ steps.configure-checks.outputs.matrix }}') | tr -d \'\"); do
            printf '    - %s\n' "${conf}"
          done

  check:
    needs: [configure]
    if: ${{ contains(fromJson(needs.configure.outputs.checks), 'check') }}
    uses: ./.github/workflows/run-checks.yml

  smoke-test:
    needs: [configure]
    if: ${{ contains(fromJson(needs.configure.outputs.checks), 'smoke') }}
    uses: ./.github/workflows/run-smoke-test.yml

  docs:
    needs: [configure]
    if: ${{ contains(fromJson(needs.configure.outputs.checks), 'docs') }}
    uses: ./.github/workflows/build-docs.yml

  benchmark:
    needs: [configure, smoke-test]
    if: ${{ contains(fromJson(needs.configure.outputs.checks), 'benchmark') }}
    uses: ./.github/workflows/run-benchmarks.yml

  test-tlspuffin:
    needs: [configure, smoke-test]
    if: ${{ contains(fromJson(needs.configure.outputs.checks), 'test') }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.configure.outputs.matrix) }}

    uses: ./.github/workflows/run-tlspuffin-tests.yml
    with:
      name: ${{ matrix.name }}
      vendor: ${{ matrix.vendor }}
      preset: ${{ matrix.preset }}
      options: ${{ toJson(matrix.options) }}
      features: ${{ toJson(matrix.features) }}