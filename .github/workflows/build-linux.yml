name: Build

on:
  workflow_call:

env:
  RUST_LOG: info

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        name: ["openssl111", "openssl101f", "openssl102u", "libressl", "wolfssl520", "no_default_features"]
        include:
          - name: openssl111
            features: openssl111
            clean-crates: openssl-sys
          - name: openssl101f
            features: openssl101f,asan
            apt-dependencies: xutils-dev
            clean-crates: openssl-sys
          - name: openssl102u
            features: openssl102u
            clean-crates: openssl-sys
          - name: libressl
            features: libressl
          - name: wolfssl520
            features: wolfssl520
          - name: no_default_features
            features: ""
            cargo-flags: "--no-default-features"
            skip-tests: true
    name: Build "${{ matrix.name }}"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Setup
        uses: ./.github/actions/setup
        with:
          key: ${{ matrix.name }}
      - name: APT Dependencies
        if: matrix.apt-dependencies
        shell: bash
        run: sudo apt-get install -y ${{ matrix.apt-dependencies }}
      - name: Clean
        if: matrix.clean-crates
        shell: bash
        run: |
          cargo clean --target x86_64-unknown-linux-gnu -p ${{ matrix.clean-crates }}
          cargo clean --target x86_64-unknown-linux-gnu --release -p ${{ matrix.clean-crates }}
      - name: Build
        shell: bash
        run: just build tlspuffin x86_64-unknown-linux-gnu "${{ matrix.features }}" "${{ matrix.cargo-flags }} --timings"
      - name: Upload Build Timings
        uses: actions/upload-artifact@v2
        with:
          name: cargo-timings-${{ matrix.name }}
          path: target/cargo-timings/cargo-timing.html
      - name: Check
        shell: bash
        run: just check tlspuffin x86_64-unknown-linux-gnu "${{ matrix.features }}" "${{ matrix.cargo-flags }}"
      - name: Test
        if: "!matrix.skip-tests"
        shell: bash
        run: just test tlspuffin x86_64-unknown-linux-gnu "${{ matrix.features }}" "${{ matrix.cargo-flags }}"
      - uses: actions/upload-artifact@v2
        with:
          name: tlspuffin-${{ matrix.name }}
          path: target/x86_64-unknown-linux-gnu/release/tlspuffin
