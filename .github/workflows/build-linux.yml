name: Build

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      apt-dependencies:
        required: false
        type: string
      clean-crates:
        required: false
        type: string
      crate:
        required: true
        type: string
      features:
        required: true
        type: string
      cargo-flags:
        required: false
        type: string
      save-cache:
        required: false
        type: string

env:
  RUST_LOG: info

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    name: Build "${{ inputs.name }}"
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Setup Git
        shell: bash
        run: |
          git config --global user.email "tlspuffin@tlspuffin"
          git config --global user.name "tlspuffin"
      - name: Setup
        uses: ./.github/actions/setup
        with:
          key: ${{ inputs.name }}
          save-cache: ${{ inputs.save-cache }}
      - name: APT Dependencies
        if: inputs.apt-dependencies
        shell: bash
        run: sudo apt-get install -y ${{ inputs.apt-dependencies }}
      - name: Clean
        if: inputs.clean-crates
        shell: bash
        run: |
          cargo clean --target x86_64-unknown-linux-gnu -p ${{ inputs.clean-crates }}
          cargo clean --target x86_64-unknown-linux-gnu --release -p ${{ inputs.clean-crates }}
      - name: Build
        shell: bash
        run: just build ${{ inputs.crate }} x86_64-unknown-linux-gnu "${{ inputs.features }}" "${{ inputs.cargo-flags }} --timings"
      - name: Upload Build Timings
        uses: actions/upload-artifact@v3
        with:
          name: cargo-timings-${{ inputs.name }}
          path: target/cargo-timings/cargo-timing.html
      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.crate }}-${{ inputs.name }}
          path: target/x86_64-unknown-linux-gnu/release/${{ inputs.crate }}
      - name: Check puffin
        shell: bash
        run: just check puffin x86_64-unknown-linux-gnu "" "${{ inputs.cargo-flags }}"
      - name: Check
        shell: bash
        run: just check ${{ inputs.crate }} x86_64-unknown-linux-gnu "${{ inputs.features }}" "${{ inputs.cargo-flags }}"
      - name: Test puffin
        shell: bash
        run: just test puffin x86_64-unknown-linux-gnu "" "${{ inputs.cargo-flags }}"
      - name: Test
        shell: bash
        run: just test ${{ inputs.crate }} x86_64-unknown-linux-gnu "${{ inputs.features }}" "${{ inputs.cargo-flags }}"
