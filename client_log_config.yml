# Scan this file for changes every 30 seconds
refresh_rate: 30 seconds

appenders:
  # An appender named "stdout" that writes to stdout
  stdout:
    kind: console

  # An appender named "requests" that writes to a file with a custom pattern encoder
  puffin_terms_log:
    kind: rolling_file
    path: "log/terms.log"
    encoder:
      pattern: "{d}\t{l}\t{m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10 mb
      roller:
        kind: fixed_window
        pattern: log/terms.{}.gz
        # The maximum number of archived logs to maintain. Required.
        count: 5
        # The base value for archived log indices. Defaults to 0.
        base: 1

    # An appender named "puffin_log" that writes to a file with a custom pattern encoder and a rolling policy
  debug_log:
    kind: rolling_file
    path: "log/debug.log"
    encoder:
      pattern: "{d}\t{l}\t{m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10 mb
      roller:
        kind: fixed_window
        pattern: log/puffin.{}.gz
        count: 5
        base: 1

  # New appender for ERROR level messages
  error_log:
    kind: rolling_file
    path: "log/error.log"
    encoder:
      pattern: "{d}\t{l}\t{m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10 mb
      roller:
        kind: fixed_window
        pattern: log/error.{}.gz
        count: 5
        base: 1

  # New appender for WARN level messages
  warn_log:
    kind: rolling_file
    path: "log/warn.log"
    encoder:
      pattern: "{d}\t{l}\t{m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 10 mb
      roller:
        kind: fixed_window
        pattern: log/warn.{}.gz
        count: 5
        base: 1

# Set the default logging level to "warn" and attach the "stdout" appender to the root
root:
  level: debug
  appenders:
    - debug_log

loggers:
  # New logger for ERROR level messages
  error:
    level: error
    appenders:
      - error_log
    additive: true

  warn:
    level: warn
    appenders:
      - warn_log
    additive: true

  # Raise the maximum log level for events sent to the "puffin::algebra::term" logger to "debug" and print to a dedicated file
  puffin::algebra::term:
    level: debug
    appenders:
      - puffin_terms_log
    additive: true

#  # Route log events sent to the "app::requests" logger to the "requests" appender,
#  # and *not* the normal appenders installed at the root
#  app::requests:
#    level: info
#    appenders:
#      - requests
#    additive: false
## TODO: find a way to redirect PUT logging info to a dedidcated file too